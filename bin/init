#!/usr/bin/env node

/**
 * Module dependencies
 **/

var program = require('commander'),
    fs = require('fs'),
    mkdirp = require('mkdirp'),
    rimraf = require('rimraf');

/**
 * Command Line Interface
 **/

program
  .version('0.0.1')
  .option('-c, --css <engine>', 'add stylesheet engine support (sass|less) defaults to none (css)')
  .option('-a, --auth <strategy>', 'choose authentication strategy (basic|oauth|both) defaults to basic')
  .option('-p, --private', 'make your site private by requiring users to log in')
  .option('-e, --view <engine>', 'add view engine support (ejs|hbs) defaults to ejs')
  .option('-f, --framework <name>', 'add client-side framework support (angular|ember) defaults to none')
  .parse(process.argv);

console.log('Creating your muse:');
if(program.css) {
  console.log('You picked:' + program.css);
}
if(program.view) {
  console.log('You picked:' + program.view);
}
if(program.framework) {
  console.log('You picked:' + program.framework);
}

var path = '.';

/**
 * Makin Muses
 **/

// Basic mongoose models and CRUD operations for Users, Pages, Blogs, and Posts
// Separate view routes from API routes in preparation for client-side framework support

generateMuse(path);

/**
 * Private Methods
 **/

function generateMuse(path){
  mkdir(path, function(){
    mkdir(path + '/server');
    mkdir(path + '/server/models');
    write(path + '/server/models/index.js', log());
    write(path + '/server/models/User.js', log());
    write(path + '/server/models/Page.js', log());
    mkdir(path + '/server/routes');
    write(path + '/server/routes/index.js', log());
    write(path + '/server/routes/users.js', log());
    write(path + '/server/routes/auth.js', log());
    mkdir(path + '/public');
    mkdir(path + '/public/js');
    write(path + '/public/js/main.js', log());
    mkdir(path + '/public/img');
    mkdir(path + '/public/css', function(){
      switch (program.framework) {
        case 'sass':
          write(path + '/public/css/style.scss', log());
          break;
        case 'less':
          write(path + '/public/css/style.less', log());
          break;
        default:
          write(path + '/public/css/style.css', log());
      }
    });
    mkdir(path + '/public/templates');
    mkdir(path + '/config');
  });
}

function mkdir(path, cb) {
  console.log('   Creating: ' + path);
  mkdirp(path, cb)
}

function write(path, cb) {
  console.log('   Creating: ' + path);
  fs.writeFile(path, cb)
}

function log() {
  console.log('Done!');
}

function cleanup(dir, callback) {
  if (typeof dir === 'function') {
    callback = dir;
    dir = tempDir;
  }

  rimraf(tempDir, function (err) {
    console.log('Removing ' + tempDir);
    callback(err);
  });
}